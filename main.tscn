[gd_scene load_steps=5 format=3 uid="uid://cyvmgvlwc57bb"]

[ext_resource type="Texture2D" uid="uid://y731m37vqjbw" path="res://Demo-tile 3.png" id="1_m3vms"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_kyyp7"]
texture = ExtResource("1_m3vms")
texture_region_size = Vector2i(128, 128)
0:0/0 = 0
1:0/0 = 0
2:0/0 = 0
0:1/0 = 0
1:1/0 = 0
2:1/0 = 0
0:2/0 = 0
1:2/0 = 0
2:2/0 = 0
0:3/0 = 0
1:3/0 = 0
2:3/0 = 0
4:3/0 = 0
5:3/0 = 0
0:4/0 = 0
1:4/0 = 0
2:4/0 = 0
3:4/0 = 0
4:4/0 = 0
5:4/0 = 0
0:5/0 = 0
2:5/0 = 0
3:5/0 = 0
4:5/0 = 0
0:6/0 = 0
1:6/0 = 0
2:6/0 = 0
0:7/0 = 0
1:7/0 = 0
2:7/0 = 0

[sub_resource type="TileSet" id="TileSet_jj3q1"]
tile_size = Vector2i(128, 128)
sources/1 = SubResource("TileSetAtlasSource_kyyp7")

[sub_resource type="GDScript" id="GDScript_mkjk7"]
script/source = "extends TileMap


var GridSize = 4
var Dic = {} 

func _ready():
	for x in GridSize:
		for y in GridSize:
			Dic[str(Vector2(x,y))] = {
				\"Type\": \"Grass\",
				\"Position\" : str(Vector2(x,y))
			}
			set_cell(0, Vector2(x, y), 1, Vector2i(1,1),0)


func _process(delta):
	var tile = local_to_map(get_global_mouse_position())
	if Dic.has(str(tile)):
		for x in GridSize:
			for y in GridSize:
				erase_cell(1,Vector2(x,y))
		set_cell(1, tile, 1, Vector2i(4,4), 0)
		print(Dic[str(tile)])
"

[node name="Main" type="Node2D"]

[node name="Camera2D" type="Camera2D" parent="."]
enabled = false

[node name="TileMap" type="TileMap" parent="."]
tile_set = SubResource("TileSet_jj3q1")
cell_quadrant_size = 128
format = 2
layer_1/name = ""
layer_1/enabled = true
layer_1/modulate = Color(1, 1, 1, 1)
layer_1/y_sort_enabled = false
layer_1/y_sort_origin = 0
layer_1/z_index = 0
layer_1/tile_data = PackedInt32Array()
script = SubResource("GDScript_mkjk7")
